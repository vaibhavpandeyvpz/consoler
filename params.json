{
  "name": "Consoler",
  "tagline": "Extensions for symfony/console adding support for using any container-interop/container-interop compatible package.",
  "body": "# vaibhavpandeyvpz/consoler\r\nExtensions for [symfony/console](https://github.com/symfony/console) adding support for using any [container-interop/container-interop](https://github.com/container-interop/container-interop) compatible package.\r\n\r\nInstall\r\n------\r\n```bash\r\ncomposer require vaibhavpandeyvpz/consoler\r\n```\r\n\r\nYou may also want to install [vaibhavpandeyvpz/katora](https://github.com/vaibhavpandeyvpz/katora) to provide ```Interop\\Container\\ContainerInterface```. To do so, run following:\r\n\r\n```bash\r\ncomposer require vaibhavpandeyvpz/katora\r\n```\r\n\r\nUsage\r\n------\r\nInitialize a instance of ```Consoler\\Application``` with an ```Interop\\Container\\ContainerInterface``` instance and run as usual.\r\n\r\n```php\r\n#!/usr/bin/env php\r\n<?php\r\n\r\nrequire_once __DIR__ . '/vendor/autoload.php';\r\n\r\n$app = new Consoler\\Application($container = new Katora\\Container());\r\n\r\n$container[PDO::class] = $container->share(function () {\r\n    return new PDO(/** args */);\r\n});\r\n\r\n$app->add(new SearchCommand());\r\n\r\n$app->run();\r\n```\r\n\r\nSince ```Consoler\\Command``` class implements ```Interop\\Container\\ContainerInterface```, you can just extend it & use the container as below:\r\n\r\n```php\r\nuse Consoler\\Command;\r\nuse Symfony\\Component\\Console\\Input\\InputInterface as Input;\r\nuse Symfony\\Component\\Console\\Output\\OutputInterface as Output;\r\n\r\nclass SearchCommand extends Command\r\n{\r\n    protected function execute(Input $input, Output $output)\r\n    {\r\n        /** @var \\PDO $pdo */\r\n        $pdo = $this->get(\\PDO::class);\r\n        // ...more code!\r\n    }\r\n}\r\n```\r\n\r\nLicense\r\n------\r\nSee [LICENSE.md](https://github.com/vaibhavpandeyvpz/consoler/blob/master/LICENSE.md) file.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}